name: Build

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
      - 'hotfix/v*.*.*'
  schedule:
    - cron: '0 5 * * 1'

jobs:
  back-end:
    name: Back-End
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Lint
        run: mvn spotless:check

      - name: Build
        run: mvn clean package -P production

      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: 'target/surefire-reports/TEST-*.xml'

      - name: Sonar
        if: github.event.pull_request.head.repo.fork == false
        run: mvn verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Grype source code
        id: grype_source_code
        uses: anchore/scan-action@v6
        with:
          path: .
          fail-build: true
          severity-cutoff: high
          only-fixed: true

      - name: Upload Grype source code report
        if: always() && steps.grype_source_code.outputs.sarif != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.grype_source_code.outputs.sarif }}
          category: 'source-code'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: suricate-widget-tester
          path: ${{ github.workspace }}/target/suricate-widget-tester.jar

  front-end:
    name: Front-End
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node.js 24.x
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Lint
        run: |
          npm install --no-progress
          npm run lint

      - name: Build
        run: |
          npm run build -- --configuration production
          npm run test